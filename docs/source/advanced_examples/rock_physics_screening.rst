
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "advanced_examples\rock_physics_screening.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_advanced_examples_rock_physics_screening.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_advanced_examples_rock_physics_screening.py:


Rock physics data screening
===========================

.. GENERATED FROM PYTHON SOURCE LINES 7-17

.. code-block:: python3



    import numpy as np
    import matplotlib.pyplot as plt
    import pandas as pd
    plt.rcParams['font.size']=14
    plt.rcParams['font.family']='arial'
    plt.rcParams['axes.labelpad'] = 10.0









.. GENERATED FROM PYTHON SOURCE LINES 18-24

.. code-block:: python3



    # import the module 
    from rockphypy import QI









.. GENERATED FROM PYTHON SOURCE LINES 25-30

.. code-block:: python3



    import matplotlib.colors
    cmap1 = matplotlib.colors.LinearSegmentedColormap.from_list("", ["green","orange","yellow"])








.. GENERATED FROM PYTHON SOURCE LINES 31-35

Given tons of petrophysical properties meaured or derived e.g. from well logs, data screening is inevitably required for later intepretation and scenerial modelling. The purpose of data screening is to identify and address any errors, inconsistencies, or missing data in the dataset before any analysis is conducted. 

Avseth et al. (2020) proposed a rock physics model-based data screening approach. Several contact based elastic models are used to generate elastic bounds for high-porosity sands and sandstones (typical reservoir sandstone). These elastic bounds can tell if data comply with physics. Rock physics diagnostic models used are ``friable sand model``,``contact cement model`` and ``increasing cement model``, ``rockphypy`` provides all the implementations. In addition, ``rockphypy`` has written the code used to plot the elastic bounds as a function ``QI.screening``, ``QI`` stands for Quantitative Intepretation. There are many practically useful functionalities in this submodule.  


.. GENERATED FROM PYTHON SOURCE LINES 37-57

.. code-block:: python3



    # parameters 
    Dqz, Kqz, Gqz = 2.65, 36.6, 45 ## grain density, bulk and shear modulus 
    Dsh, Ksh, Gsh = 2.7, 21, 7 # shale/clay density, bulk and shear modulus
    Dc,Kc, Gc =2.65, 36.6, 45 # cement density, bulk and shear modulus
    Db, Kb = 1, 2.2 # brine density, bulk modulus
    Do, Ko = 0.8, 1.5 # oil density, bulk modulus
    Dg, Kg = 0.2, 0.06 # gas density, bulk modulus
    phi_c=0.4 # critical porosity
    sigma=20 # effective pressure 
    scheme=2
    Cn=8.6
    # could be array
    vsh=0 # shale volume
    #phib_p=[0.3,0.36,0.38,0.39] # define cement porosity for Vp
    phib_p=0.3
    f= 0.5 # slip factor 









.. GENERATED FROM PYTHON SOURCE LINES 58-71

.. code-block:: python3



    phi,vp1,vp2,vp3,vs1,vs2,vs3 = QI.screening(Dqz,Kqz,Gqz,Dsh,Ksh,Gsh,Dc,Kc,Gc,Db,Kb,phib_p,phi_c,sigma,vsh,scheme,f, Cn)

    fig,ax=plt.subplots()
    fig.set_size_inches(7, 6)
    ax.plot(phi,vp3,'-k', lw=4, alpha=0.7)
    ax.plot(phi,vp1,'--k', lw=2, alpha=0.7)
    ax.plot(phi,vp2,'-k',lw=4, alpha=0.7)
    ax.set_ylabel('Vp (m/s)')
    ax.set_xlabel('porosity')
    ax.grid(ls='--',alpha=0.7)




.. image-sg:: /advanced_examples/images/sphx_glr_rock_physics_screening_001.png
   :alt: rock physics screening
   :srcset: /advanced_examples/images/sphx_glr_rock_physics_screening_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 72-76

Applied to field data 
^^^^^^^^^^^^^^^^^^^^^
Let's import a example synthetic well log data and apply the rock physics screening to the well log data 


.. GENERATED FROM PYTHON SOURCE LINES 78-83

.. code-block:: python3



    data = pd.read_csv('../../data/well/example_well.csv')









.. GENERATED FROM PYTHON SOURCE LINES 84-101

.. code-block:: python3


    # sphinx_gallery_thumbnail_number = 2
    fig,ax=plt.subplots()
    fig.set_size_inches(7, 6)
    ax.plot(phi,vp3,'-k', lw=4, alpha=0.7)
    ax.plot(phi,vp1,'--k', lw=2, alpha=0.7)
    ax.plot(phi,vp2,'-k',lw=4, alpha=0.7)
    ax.set_ylabel('Vp (m/s)')
    ax.set_xlabel('Porosity')
    ax.grid(ls='--',alpha=0.7)


    plt.scatter(data.PHIT_D,data.VP*1000,c=1-data.VSH_GR,vmin=0, vmax=1,edgecolors='grey',s=100,alpha=1,cmap=cmap1)

    cbar=plt.colorbar()
    cbar.set_label(r'$V_{\rm Sand}$')




.. image-sg:: /advanced_examples/images/sphx_glr_rock_physics_screening_002.png
   :alt: rock physics screening
   :srcset: /advanced_examples/images/sphx_glr_rock_physics_screening_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 102-104

**Reference** 
- Avseth, P., Lehocki, I., Kjøsnes, Ø., & Sandstad, O. (2021). Data‐driven rock physics analysis of North Sea tertiary reservoir sands. Geophysical Prospecting, 69(3), 608-621.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.477 seconds)


.. _sphx_glr_download_advanced_examples_rock_physics_screening.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: rock_physics_screening.py <rock_physics_screening.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: rock_physics_screening.ipynb <rock_physics_screening.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
